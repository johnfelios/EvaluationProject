@page "/cleaner/{id:int}"

@using BlazorApp1.Services;
@using BlazorApp1.Models;
@inherits BaseComponent
@inject IAppState AppState
@inject IRepositoryService RepositoryService;
<link rel="stylesheet" href="css\styles.css">

<div class="header">
    <div class="user-info">
        <span>@($"Username:{AppState.Username}")</span>
        <span>@("Cleaner")</span>
    </div>
    <button class="logout-button" @onclick="Logout">Logout</button>
</div>
<h3>Cleaning Working Schedule</h3>


@if (cleanerSchedule == null)
{
    <p>Loading...</p>
}
else if (cleanerSchedule.Count == 0)
{
    <p>No schedule found for this cleaner.</p>
}
else
{

<div class="table-container">
    <div class="table-wrapper">
        <table class="table">
            <thead>
                <tr>
                    <th>Day</th>
                    <th>Start Time</th>
                    <th>End Time</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var schedule in cleanerSchedule)
                {
                    <tr>
                        <td>@schedule.Day</td>
                        <td>@schedule.StartTime</td>
                        <td>@schedule.EndTime</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
  </div>
}

@code {
    List<CleanerScheduleDto> cleanerSchedule;
    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Authorize(AppState.AccountId, id);
        cleanerSchedule = await RepositoryService.GetCleanerScheduleAsync(id);
    }
}
